{"version":3,"sources":["Todo.js","TodoList.js","App.js","index.js"],"names":["Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","LOCAL_STORAGE_KEY","App","useState","setTodos","todoNameRef","useRef","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodos","find","ref","onClick","e","current","value","prevTodos","uuidv4","filter","class","length","ReactDOM","render","document","getElementById"],"mappings":"kOAEe,SAASA,EAAT,GAAqC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WAKnC,OACE,8BACE,kCACE,uBACEC,KAAK,WACLC,QAASH,EAAKI,SACdC,SAVgB,WACtBJ,EAAWD,EAAKM,OAWXN,EAAKO,UCZC,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,MAAOR,EAAc,EAAdA,WACxC,OAAOQ,EAAMC,KAAI,SAACV,GAChB,OAAO,cAACD,EAAD,CAAoBC,KAAMA,EAAMC,WAAYA,GAAjCD,EAAKM,O,YCArBK,G,MAAoB,iBA0DXC,MAxDf,WAAe,MAEaC,mBAAS,IAFtB,mBAENJ,EAFM,KAECK,EAFD,KAKPC,EAAcC,iBAAO,MAqC3B,OAlCAC,qBAAU,WACR,IAAMC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQX,IAChDO,GAAaJ,EAASI,KACzB,IAGHD,qBAAU,WACRI,aAAaE,QAAQZ,EAAmBQ,KAAKK,UAAUf,MACtD,CAACA,IA2BF,qCACE,kFACA,cAACD,EAAD,CAAUC,MAAOA,EAAOR,WA1BT,SAACK,GAClB,IAAMmB,EAAQ,YAAOhB,GACfT,EAAOyB,EAASC,MAAK,SAAC1B,GAAD,OAAUA,EAAKM,KAAOA,KACjDN,EAAKI,UAAYJ,EAAKI,SACtBU,EAASW,MAuBP,uBAAOE,IAAKZ,EAAab,KAAK,SAC9B,wBAAQ0B,QApBU,SAACC,GACrB,IAAMtB,EAAOQ,EAAYe,QAAQC,MACpB,KAATxB,IACJO,GAAS,SAACkB,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsB,CAAE1B,GAAI2B,cAAU1B,KAAMA,EAAMH,UAAU,QAE9DW,EAAYe,QAAQC,MAAQ,OAc1B,sBACA,wBAAQH,QAXa,WACvB,IAAMH,EAAW,YAAIhB,GAAOyB,QAAO,SAAClC,GAAD,OAAWA,EAAKI,YACnDU,EAASW,IASP,mCACA,sBAAKU,MAAM,YAAX,UACG1B,EAAMyB,QAAO,SAAClC,GAAD,OAAWA,EAAKI,YAAUgC,OAD1C,qBCnDNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.cf874f3c.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Todo({ todo, toggleTodo }) {\n  const handleTodoClick = () => {\n    toggleTodo(todo.id);\n  };\n\n  return (\n    <div>\n      <label>\n        <input\n          type='checkbox'\n          checked={todo.complete}\n          onChange={handleTodoClick}\n        />\n        {todo.name}\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\nimport Todo from './Todo';\n\nexport default function TodoList({ todos, toggleTodo }) {\n  return todos.map((todo) => {\n    return <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} />;\n  });\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport { v4 as uuidv4 } from 'uuid';\nimport './todo.css';\n\nconst LOCAL_STORAGE_KEY = 'todoApp.todos';\n\nfunction App() {\n  // example object { id: 1, name: 'Todo 1', complete: true },\n  const [todos, setTodos] = useState([]);\n\n  // ref provides the value of the input\n  const todoNameRef = useRef(null);\n\n  // Retrieve existing todos from local storage\n  useEffect(() => {\n    const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storedTodos) setTodos(storedTodos);\n  }, []);\n\n  // Add todos to local storage\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }, [todos]);\n\n  // Toggle current state of the todo\n  const toggleTodo = (id) => {\n    const newTodos = [...todos]; // use a copy of the todos\n    const todo = newTodos.find((todo) => todo.id === id);\n    todo.complete = !todo.complete;\n    setTodos(newTodos);\n  };\n\n  // Add a new todo\n  const handleAddTodo = (e) => {\n    const name = todoNameRef.current.value;\n    if (name === '') return;\n    setTodos((prevTodos) => {\n      return [...prevTodos, { id: uuidv4(), name: name, complete: false }];\n    });\n    todoNameRef.current.value = null;\n  };\n\n  // Filter for incomplete todos\n  const handleClearTodos = () => {\n    const newTodos = [...todos].filter((todo) => !todo.complete);\n    setTodos(newTodos);\n  };\n\n  return (\n    <>\n      <h1>What can you learn from a basic React Todo List?</h1>\n      <TodoList todos={todos} toggleTodo={toggleTodo} />\n      <input ref={todoNameRef} type='text' />\n      <button onClick={handleAddTodo}>Add Todo</button>\n      <button onClick={handleClearTodos}>Clear Completed Todos</button>\n      <div class='remaining'>\n        {todos.filter((todo) => !todo.complete).length} left to do\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}